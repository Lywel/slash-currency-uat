{"version":3,"sources":["components/TransactionsCard.js","components/Navigation.js","components/LiveLogs.js","components/NetworkTopo.js","components/NetworkDetails.js","components/BlockchainCard.js","components/History.js","components/MainPage.js","components/Dashboard.js","components/App.js","serviceWorker.js","index.js","components/LogDetailsModal.js"],"names":["TransactionsCard","chain","this","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_7__","className","color","map","block","transactions","reduce","txs","acc","Object","_mnt_sd_home_maxime_workspace_pro_slash_lab_currency_uat_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","concat","tx","id","key","Buffer","from","toString","substring","to","amount","reverse","Component","Navigation","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","url","handleChange","bind","assertThisInitialized","handleKeyPress","evt","setState","objectSpread","target","value","status","onChange","_this$props","status_color","connected","connecting","disconnected","react_default","reactstrap_es","dark","expand","addonType","onKeyPress","onClick","disabled","stylizeItem","type","icon","ChevronRight","ChevronLeft","Clippy","Alert","LiveLogs","detailsModalOpen","details","openDetailsModal","closeDetailsModal","_this2","_this3","logs","log","index_esm","dataType","_this$state","LogDetailsModal","isOpen","toggle","NetworkTopo","options","layout","improvedLayout","edges","shadow","smooth","nodes","shape","size","font","autoResize","events","select","event","onNodeSelect","graph","lib_default","style","height","width","NetworkDetails","node","body","entries","_ref","_ref2","slicedToArray","val","BlockchainCard","slice","item","header","number","pill","parenthash","length","History","activeTab","tab","justified","pills","tabId","src_components_BlockchainCard","MainPage","failed","ws","tries","selectedNetworkNode","updateTopoInter","updateBlockchainInter","connect","connectionStatusChanged","updateNetworkTopo","updateBlockchain","setInterval","prevProps","onStateChange","onopen","onclose","close","WebSocket","onmessage","e","msg","JSON","parse","data","address","networkAddress","label","split","fixed","filter","date","Date","now","toConsumableArray","sort","b","onerror","send","stringify","_this4","fetch","then","res","json","blockchain","nodeId","fluid","md","src_components_LiveLogs","components_NetworkTopo","components_NetworkDetails","src_components_History","Dashboard","node_url","conn_status","handleStateChange","src_components_Navigation","src_components_MainPage","App","src_components_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","formatBlock","react__WEBPACK_IMPORTED_MODULE_7___default","Fragment","reactstrap__WEBPACK_IMPORTED_MODULE_8__","striped","_mnt_sd_home_maxime_workspace_pro_slash_lab_currency_uat_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_5__","Proposal","_ref3","_ref4","formatLogDetails","_githubprimer_octicons_react__WEBPACK_IMPORTED_MODULE_6__"],"mappings":"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","file":"static/js/main.1f1da9e7.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Card,\n  Table,\n} from 'reactstrap'\n\nimport './BlockchainCard.css'\n\nclass TransactionsCard extends Component {\n  render() {\n    const { chain } = this.props\n    return (\n      <Card className=\"TransactionsCard\" color=\"dark\">\n        <Table>\n          <thead>\n            <tr>\n              <th>From</th>\n              <th>To</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n          { chain &&\n            chain\n              .map(block => block.transactions)\n              .reduce((txs, acc) => [...txs, ...acc], [])\n              .map((tx, id) => (\n              <tr key={id}>\n                <td>{ Buffer.from(tx.from).toString('hex').substring(0, 20) }</td>\n                <td>{ Buffer.from(tx.to).toString('hex').substring(0, 20) }</td>\n                <td>{ tx.amount }</td>\n              </tr>\n            )).reverse()\n          }\n          </tbody>\n        </Table>\n      </Card>\n    )\n  }\n}\n\nexport default TransactionsCard\n\n","import React, { Component } from 'react'\nimport {\n  Navbar,\n  NavbarBrand,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Badge,\n  Button,\n} from 'reactstrap'\nimport './Navigation.css'\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      url: this.props.url\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleKeyPress = this.handleKeyPress.bind(this)\n  }\n\n  handleChange(evt) {\n    this.setState({...this.state, url: evt.target.value})\n  }\n\n  handleKeyPress(evt) {\n    if (evt.key === 'Enter') {\n      // If button is disabled\n      if (this.props.status === 'connected' && this.props.url === this.state.url)\n        return\n      this.props.onChange(this.state.url)\n    }\n  }\n\n  render() {\n    const { status, onChange } = this.props\n    const { url } = this.state\n    let status_color = {\n      connected: 'success',\n      connecting: 'warning',\n      disconnected: 'danger',\n    }[status]\n\n    return (\n      <div className={\"Navigation \" + status} >\n        <h1>Validator UAT</h1>\n        <Navbar dark expand=\"md\">\n          <NavbarBrand>Validator</NavbarBrand>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <Badge color={ status_color }>{' '}</Badge>\n            </InputGroupAddon>\n            <Input value={ url } onChange={ this.handleChange } onKeyPress={ this.handleKeyPress }/>\n            <InputGroupAddon addonType=\"append\">\n              <Button\n                onClick={() => onChange(url)}\n                disabled={status === 'connected' && this.props.url === this.state.url}>\n                { status === 'connected' ? this.props.url !== this.state.url ? 'Change' : 'Connected' : 'Connect' }\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Navbar>\n      </div>\n    )\n  }\n}\n\nexport default Navigation\n","import React, { Component } from 'react'\nimport {\n  ListGroup,\n  ListGroupItem,\n  Button,\n} from 'reactstrap'\nimport Octicon, {ChevronLeft, ChevronRight, Clippy, Alert} from '@githubprimer/octicons-react'\nimport LogDetailsModal from './LogDetailsModal'\n\nimport './LiveLogs.css'\n\nfunction stylizeItem(type) {\n  switch (type) {\n  case 'ibftEventIn':\n    return {\n      color: 'primary',\n      icon: ChevronRight,\n    }\n  case 'ibftEventOut':\n    return {\n      color: 'info',\n      icon: ChevronLeft,\n    }\n  case 'txEvent':\n    return {\n      color: 'success',\n      icon: Clippy,\n    }\n  default:\n    return {\n      color: 'dark',\n      icon: Alert,\n    }\n  }\n}\n\nclass LiveLogs extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      detailsModalOpen: false,\n      details: null,\n    }\n\n    this.openDetailsModal = this.openDetailsModal.bind(this)\n    this.closeDetailsModal = this.closeDetailsModal.bind(this)\n  }\n\n  openDetailsModal(details) {\n    return () => {\n      this.setState({\n        detailsModalOpen: true,\n        details: details,\n      })\n    }\n  }\n\n  closeDetailsModal() {\n    this.setState({\n      detailsModalOpen: false,\n    })\n  }\n\n  render() {\n\n    const logs = this.props.logs\n      .map((log, id) => (\n        <ListGroupItem key={ id } color={ stylizeItem(log.type).color }>\n          <Button color=\"link\" onClick={ this.openDetailsModal(log) }>\n            <Octicon icon={ stylizeItem(log.type).icon } />\n            { (() => {\n              switch (log.dataType) {\n                case 'core.RequestEvent':\n                  return 'Proposal: block'\n                default:\n                  return log.dataType || log.type\n                }\n              })()\n            }\n          </Button>\n        </ListGroupItem>\n      ))\n    const { details, detailsModalOpen } = this.state\n    return (\n      <div className=\"LiveLogs h-100\">\n        <LogDetailsModal\n          isOpen={ detailsModalOpen }\n          toggle={ this.closeDetailsModal }\n          details={ details }\n        />\n        <ListGroup>\n        { logs }\n        </ListGroup>\n      </div>\n    )\n  }\n}\n\nexport default LiveLogs\n\n","import React, { Component } from 'react'\nimport {\n} from 'reactstrap'\nimport Graph from 'react-graph-vis'\n\nclass NetworkTopo extends Component {\n\n  options = {\n    layout: {\n      improvedLayout: true\n    },\n    edges: {\n      shadow: true,\n      smooth: true,\n    },\n    nodes: {\n      shape: 'hexagon',\n      shadow: true,\n      size: 20,\n      font: {\n        color: 'white',\n      },\n    },\n    autoResize: true,\n  }\n\n  events = {\n    select: event => {\n      const { nodes/*, edges */ } = event;\n      this.props.onNodeSelect(nodes[0])\n    }\n  }\n\n  render() {\n    const { graph } = this.props\n\n    return (\n      <div className=\"NetworkTopo\">\n        <Graph graph={graph} options={this.options} events={this.events} style={{ height: '100%', width: '100%'}}/>\n      </div>\n    )\n  }\n}\n\nexport default NetworkTopo\n","import React, { Component } from 'react'\nimport {\n  Card,\n  CardTitle,\n} from 'reactstrap'\n\nclass NetworkDetails extends Component {\n  render() {\n    const { node } = this.props\n    return (\n      <div className=\"NetworkDetails\">\n        <Card body color='dark'>\n          <CardTitle>Validator details</CardTitle>\n          <ul>\n          { node ?\n            Object.entries(node).map(([key, val], id) => (\n              <li key={id}>\n                <strong>{ key }: </strong>\n                { val }\n              </li>\n            ))\n            : 'Please select a node'\n          }\n          </ul>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default NetworkDetails\n\n","import React, { Component } from 'react'\nimport {\n  Card,\n  Table,\n  Badge,\n  Button,\n} from 'reactstrap'\n\nimport LogDetailsModal from './LogDetailsModal'\nimport './BlockchainCard.css'\n\nclass BlockchainCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      detailsModalOpen: false,\n      details: null,\n    }\n\n    this.openDetailsModal = this.openDetailsModal.bind(this)\n    this.closeDetailsModal = this.closeDetailsModal.bind(this)\n  }\n\n  openDetailsModal(details) {\n    return () => {\n      this.setState({\n        detailsModalOpen: true,\n        details: details,\n      })\n    }\n  }\n\n  closeDetailsModal() {\n    this.setState({\n      detailsModalOpen: false,\n    })\n  }\n\n  render() {\n    const { chain } = this.props\n    const { detailsModalOpen, details } = this.state\n    return (\n      <Card className=\"BlockchainCard\" color=\"dark\">\n        <LogDetailsModal\n          isOpen={ detailsModalOpen }\n          toggle={ this.closeDetailsModal }\n          details={ details }\n          type=\"block\"\n        />\n        <Table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>PrevHash</th>\n              <th>tx#</th>\n            </tr>\n          </thead>\n          <tbody>\n          { chain &&\n            chain.slice(-50).map((item, id) => (item.header &&\n              <tr key={id}>\n                <td>\n                  <Button color=\"link\" onClick={ this.openDetailsModal(item) }>\n                    { item.header.number }\n                  </Button>\n                </td>\n                <td><Badge pill>{ item.header.parenthash }</Badge></td>\n                <td>{ item.transactions.length }</td>\n              </tr>\n            )).reverse()\n          }\n          </tbody>\n        </Table>\n      </Card>\n    )\n  }\n}\n\nexport default BlockchainCard\n","import React, { Component } from 'react'\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap'\nimport './History.css'\nimport BlockchainCard from './BlockchainCard'\nimport TransactionsCard from './TransactionsCard'\n\nclass History extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      activeTab: '1',\n    }\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      })\n    }\n  }\n\n  render() {\n    const { activeTab } = this.state\n    const { chain } = this.props\n    return (\n      <div className=\"History h-100\">\n        <Nav justified pills>\n          <NavItem>\n            <NavLink\n              className={ (activeTab === '1' ? 'active ' : '') }\n              onClick={() => { this.toggle('1'); }}\n            >\n              Blockchain\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={ (activeTab === '2' ? 'active ' : '') }\n              onClick={() => { this.toggle('2'); }}\n            >\n              Transactions\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={ activeTab }>\n          <TabPane tabId=\"1\">\n            <BlockchainCard chain={ chain }/>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <TransactionsCard chain={ chain } />\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\n  export default History\n","import React, { Component } from 'react'\nimport {\n  Row,\n  Col,\n  Container,\n} from 'reactstrap'\nimport LiveLogs from './LiveLogs'\nimport NetworkTopo from './NetworkTopo'\nimport NetworkDetails from './NetworkDetails'\nimport History from './History'\n\nimport './MainPage.css'\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      logs: [],\n      status: 'disconnected',\n      failed: false,\n      nodes: [],\n      edges: [],\n      ws: null,\n      tries: 0,\n      selectedNetworkNode: null,\n      updateTopoInter: null,\n      updateBlockchainInter: null,\n      chain: null,\n    }\n\n    this.connect = this.connect.bind(this)\n    this.connectionStatusChanged = this.connectionStatusChanged.bind(this)\n    this.updateNetworkTopo = this.updateNetworkTopo.bind(this)\n    this.updateBlockchain = this.updateBlockchain.bind(this)\n    this.onNodeSelect = this.onNodeSelect.bind(this)\n  }\n\n  componentDidMount() {\n    this.connect(this.props.url)\n    this.setState({\n      updateTopoInter: setInterval(this.updateNetworkTopo, 1000),\n      updateBlockchainInter: setInterval(this.updateBlockchain, 5000),\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url) {\n      this.setState({\n        tries: 0\n      }, () => this.connect(this.props.url))\n    } else if (this.state.status === 'disconnected' && this.state.tries < 3) {\n      this.connect(this.props.url)\n    }\n  }\n\n  connectionStatusChanged(status) {\n    this.setState({\n      status: status\n    })\n    this.props.onStateChange(status)\n  }\n\n  connect(url) {\n    this.setState({\n      tries: this.state.tries + 1\n    })\n    if (this.state.ws && this.state.status !== 'disconnected') {\n      const ws = this.state.ws\n      ws.onopen = null\n      ws.onclose = null\n      ws.close()\n    }\n    this.connectionStatusChanged('connecting')\n    const ws = new WebSocket('ws://' + url)\n\n    ws.onmessage = e => {\n      const msg = JSON.parse(e.data)\n      switch (msg.type) {\n      case 'network-state':\n        const nodes = Object.entries(msg.data)\n          .map(([address, networkAddress], id) => {\n          const label = networkAddress.split(':')[0] || 'THIS'\n          let node = {\n            id: id,\n            label: label,\n            address: address,\n            networkAddress: networkAddress,\n          }\n          if (networkAddress === ':8080') {\n            node.color = 'green'\n            node.fixed = true\n          }\n          return node\n        })\n        const edges = nodes\n          .filter(node => node.id !== 1)\n          .map(node => ({ to: 1, from: node.id }))\n\n        this.setState({\n          edges: edges,\n          nodes: nodes,\n        })\n        break\n      default:\n        msg.date = Date.now()\n        const logs = [...this.state.logs, msg].sort((a, b) => (b.date - a.date)).slice(0, 20)\n        this.setState({\n          logs: logs\n        })\n      }\n    }\n\n    ws.onopen = e => {\n      if (ws.url !== 'ws://' + this.props.url) {\n        return ws.close()\n      }\n      this.connectionStatusChanged('connected')\n      this.setState({\n        logs: [],\n        failed: false,\n      })\n      this.updateNetworkTopo()\n    }\n\n    ws.onerror = e => {\n      if (ws.url !== 'ws://' + this.props.url)\n        return ws.close()\n      this.connectionStatusChanged('disconnected')\n      this.state.ws.close()\n    }\n    ws.onclose = e => {\n      if (ws.url !== 'ws://' + this.props.url)\n        return\n      this.connectionStatusChanged('disconnected')\n    }\n    this.setState({ws})\n  }\n\n  updateNetworkTopo() {\n    if (this.state.status === 'connected' && this.state.ws.url === 'ws://' + this.props.url) {\n      this.state.ws.send(JSON.stringify({\n        type: 'network-state'\n      }))\n    }\n  }\n\n  updateBlockchain() {\n    fetch('http://' + this.props.url.split('/')[0] + '/state')\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          chain: json.blockchain,\n        })\n      })\n  }\n\n  onNodeSelect(nodeId) {\n    this.setState({\n      selectedNetworkNode: this.state.nodes[nodeId]\n    })\n  }\n\n  render() {\n    const { logs, status, nodes, edges, selectedNetworkNode, chain } = this.state\n    return (\n      <Container fluid className={\"MainPage \" + status}>\n        <Row className=\"h-100\">\n          <Col md='2' className=\"h-100\">\n            <LiveLogs logs={ logs }/>\n            <h2>Live logs</h2>\n          </Col>\n          <Col md='6' className=\"h-100\">\n            <NetworkTopo graph={{ nodes,  edges }} onNodeSelect={ this.onNodeSelect } />\n            <NetworkDetails node={ selectedNetworkNode } />\n            <h2>Network topology</h2>\n          </Col>\n          <Col md='4' className=\"h-100\">\n            <History chain={ chain }/>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default MainPage\n","import React, { Component } from 'react'\nimport Navigation from './Navigation'\nimport MainPage from './MainPage'\nimport './Dashboard.css'\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      node_url: 'a263d53aae7c911e8a7a9069f40f5f2f-415446416.ap-southeast-1.elb.amazonaws.com:3000/ws',\n      //node_url: 'maxime.ga:5008/ws',\n      conn_status: 'disconnected',\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleStateChange = this.handleStateChange.bind(this)\n  }\n\n  handleChange(url) {\n    this.setState({\n      node_url: url\n    })\n  }\n\n  handleStateChange(state) {\n    this.setState({ ...this.state,\n      conn_status: state\n    })\n  }\n\n  render() {\n    const { node_url, conn_status } = this.state\n\n    return (\n      <div className=\"Dashboard\">\n        <Navigation url={ node_url } status={ conn_status } onChange={ this.handleChange } />\n        <MainPage url={ node_url } onStateChange={ this.handleStateChange } />\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n\n","import React, { Component } from 'react'\nimport './App.css'\nimport Dashboard from './Dashboard'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Dashboard />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Octicon, {ChevronLeft, ChevronRight} from '@githubprimer/octicons-react'\nimport React, { Component } from 'react'\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Table,\n} from 'reactstrap'\n\nimport './LogDetailsModal.css'\n\nfunction formatBlock(block) {\n  const { header, transactions } = block\n  return (<>\n    <h3>Proposal: block</h3>\n    <Table striped size=\"sm\">\n      <tbody>\n      {\n        Object.entries(header).map(([key, val], id) => (\n          <tr key={id}>\n            <th>{ key }</th>\n            <td>{ val }</td>\n          </tr>\n        ))\n      }\n      </tbody>\n    </Table>\n    <h4>Transactions</h4>\n    <Table striped size=\"sm\">\n      <thead>\n        <tr>\n          <th>From</th>\n          <th>To</th>\n          <th>Amount</th>\n        </tr>\n      </thead>\n      <tbody>\n      {\n        transactions.map((tx, id) => (\n          <tr key={id}>\n            <td>{ Buffer.from(tx.from).toString('hex').substring(0, 16) }</td>\n            <td>{ Buffer.from(tx.to).toString('hex').substring(0, 16) }</td>\n            <td>{ tx.amount }</td>\n          </tr>\n        ))\n      }\n      </tbody>\n    </Table>\n  </>)\n}\n\nfunction formatLogDetails(details, type) {\n  switch (type) {\n  case 'block':\n    return formatBlock(details)\n  case 'core.RequestEvent':\n    return formatBlock(details.data.Proposal)\n  case 'types.Transaction':\n    return (<>\n      <h3>Transaction</h3>\n      <Table striped size=\"sm\">\n        <tbody>\n        {\n          Object.entries(details.data).map(([key, val], id) => (\n            <tr key={id}>\n              <th>{ key }</th>\n              <td>{ key === 'from' || key === 'to' ? Buffer.from(val).toString('hex') : val }</td>\n            </tr>\n          ))\n        }\n        </tbody>\n      </Table>\n    </>)\n  default:\n    return (<pre>{ JSON.stringify(details, null, 2) }</pre>)\n  }\n}\n\nclass LogDetailsModal extends Component {\n  render() {\n    const { isOpen, toggle, details, type } = this.props\n\n    const body = details ? formatLogDetails(details, type || details.dataType) : null\n\n    return (\n      <div>\n        <Modal isOpen={ isOpen } toggle={ toggle } size='lg'>\n        { details ? (<>\n            <ModalHeader toggle={ toggle }>\n            {\n              details.type === \"ibftEventIn\"\n                ? <Octicon icon={ChevronLeft} />\n                : <Octicon icon={ChevronRight} />\n            }\n            { details.dataType || details.type }\n            </ModalHeader>\n            <ModalBody>\n            { body }\n            </ModalBody>\n          </>\n          ) : ''\n        }\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default LogDetailsModal\n"],"sourceRoot":""}